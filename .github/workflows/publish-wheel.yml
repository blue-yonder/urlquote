# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  release:
    types: [published]

jobs:
  manylinux-wheel:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'
    - name: Use maturin to build manylinux wheel
      run: |
        docker run --rm -v ${PWD}:/io ghcr.io/pyo3/maturin build --release --out ./dist
        pip install twine
        twine upload --skip-existing -u __token__ -p "${{ secrets.PYPI_API_TOKEN }}" dist/*
  
  windows-wheel:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'
    - name: Publish package
      run: |
        python -m pip install --upgrade pip
        python -m pip install build
        python -m build
        pip install twine
        twine upload --skip-existing -u __token__ -p "${{ secrets.PYPI_API_TOKEN }}" dist/*
  os-x-wheel:

    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'
    - name: Publish package
      run: |
        python -m pip install --upgrade pip
        python -m pip install build
        python -m build
        pip install twine
        twine upload --skip-existing -u __token__ -p "${{ secrets.PYPI_API_TOKEN }}" dist/*
